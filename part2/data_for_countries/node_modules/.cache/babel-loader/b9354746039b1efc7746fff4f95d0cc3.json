{"ast":null,"code":"import _slicedToArray from \"/home/jarninfang/Documents/projects/fullstackopen/part2/data_for_countries/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jarninfang/Documents/projects/fullstackopen/part2/data_for_countries/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        input = _useState2[0],\n        setInput = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        countries = _useState4[0],\n        setCountries = _useState4[1];\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => {\n      setCountries(response.data.filter(country => country.name.toLowerCase().indexOf(input) !== -1));\n      console.log(countries);\n    });\n  }, [input]);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"find countries\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"country\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), countries.length < 10 && countries.length > 1 && React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, countries.map(country => {\n    return React.createElement(\"li\", {\n      key: country.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, country.name);\n  })), countries.length >= 10 && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Too many results\"), countries.length === 1 && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, countries[0].name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"capital \", countries[0].capital), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"population \", countries[0].population), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"languages\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, countries[0].languages.map(lang => React.createElement(\"li\", {\n    key: lang.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, lang.name))), React.createElement(\"img\", {\n    src: countries[0].flag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/jarninfang/Documents/projects/fullstackopen/part2/data_for_countries/src/App.js"],"names":["React","useState","useEffect","axios","App","input","setInput","countries","setCountries","handleChange","e","target","value","get","then","response","data","filter","country","name","toLowerCase","indexOf","console","log","length","map","capital","population","languages","lang","flag"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACYH,QAAQ,CAAC,EAAD,CADpB;AAAA;AAAA,QACPI,KADO;AAAA,QACAC,QADA;;AAAA,qBAEoBL,QAAQ,CAAC,EAAD,CAF5B;AAAA;AAAA,QAEPM,SAFO;AAAA,QAEIC,YAFJ;;AAId,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACU,GAAN,yCACKC,IADL,CACWC,QAAD,IAAc;AAChBP,MAAAA,YAAY,CAACO,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAsBC,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,OAA3B,CAAmChB,KAAnC,MAA8C,CAAC,CAAjF,CAAD,CAAZ;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAZ;AACH,KAJL;AAKH,GANQ,EAMN,CAACF,KAAD,CANM,CAAT;AAOA,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,SAAxB;AAAkC,IAAA,QAAQ,EAAEI,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKF,SAAS,CAACiB,MAAV,GAAmB,EAAnB,IAAyBjB,SAAS,CAACiB,MAAV,GAAmB,CAA5C,IACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKjB,SAAS,CAACkB,GAAV,CAAeP,OAAD,IAAa;AAC5B,WAAO;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBD,OAAO,CAACC,IAAhC,CAAP;AACH,GAFI,CAAL,CAJJ,EAOKZ,SAAS,CAACiB,MAAV,IAAoB,EAApB,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAP/B,EAQKjB,SAAS,CAACiB,MAAV,KAAqB,CAArB,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKjB,SAAS,CAAC,CAAD,CAAT,CAAaY,IAAlB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYZ,SAAS,CAAC,CAAD,CAAT,CAAamB,OAAzB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAenB,SAAS,CAAC,CAAD,CAAT,CAAaoB,UAA5B,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,SAAS,CAAC,CAAD,CAAT,CAAaqB,SAAb,CAAuBH,GAAvB,CAA4BI,IAAD,IAAU;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACV,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBU,IAAI,CAACV,IAA1B,CAArC,CADL,CALJ,EAQI;AAAK,IAAA,GAAG,EAAEZ,SAAS,CAAC,CAAD,CAAT,CAAauB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CATR,CADJ;AAwBH,CAvCD;;AAyCA,eAAe1B,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n    const [input, setInput] = useState('')\n    const [countries, setCountries] = useState([])\n\n    const handleChange = (e) => {\n        setInput(e.target.value)\n    }\n\n    useEffect(() => {\n        axios.get(`https://restcountries.eu/rest/v2/all`)\n            .then((response) => {\n                setCountries(response.data.filter((country) => country.name.toLowerCase().indexOf(input) !== -1))\n                console.log(countries);\n            })\n    }, [input])\n    return (\n        <div className=\"App\">\n            <label>find countries</label>\n            <input type=\"text\" name=\"country\" onChange={handleChange}></input>\n            {countries.length < 10 && countries.length > 1 &&\n            <ul>{countries.map((country) => {\n                return <li key={country.name}>{country.name}</li>\n            })}</ul>}\n            {countries.length >= 10 && <p>Too many results</p>}\n            {countries.length === 1 && \n                <div>\n                    <h1>{countries[0].name}</h1>\n                    <p>capital {countries[0].capital}</p>\n                    <p>population {countries[0].population}</p>\n                    <h2>languages</h2>\n                    <ul>\n                        {countries[0].languages.map((lang) => <li key={lang.name}>{lang.name}</li>)}\n                    </ul>\n                    <img src={countries[0].flag}></img>\n                </div>\n            }\n\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}